{"remainingRequest":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/babel-loader/lib/index.js!/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/src/components/LearningTrajectory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/src/components/LearningTrajectory.vue","mtime":1551101425479},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Missions from './Missions.vue';\nimport seraphinAcademyData from '@/seraphinAcademyData.json';\nexport default {\n  props: ['badge'],\n  components: {\n    Missions: Missions\n  },\n  data: function data() {\n    return {\n      learningTrajectoryId: null\n    };\n  },\n  computed: {\n    trajectory: function trajectory() {\n      return seraphinAcademyData.learningTrajectories[this.learningTrajectoryId];\n    },\n    isAdmin: function isAdmin() {\n      return this.$store.state.isAdmin;\n    }\n  },\n  created: function created() {\n    this.learningTrajectoryId = this.$route.params.id;\n  },\n  methods: {\n    addBadge: function addBadge() {\n      var _this = this;\n\n      this.$prompt('Enter the name of the new badge', 'Create a new Badge üèÖ', {\n        confirmButtonText: 'Create',\n        cancelButtonText: 'Cancel'\n      }).then(function (_ref) {\n        var value = _ref.value;\n\n        _this.$message({\n          type: 'success',\n          message: \"The new badge \".concat(value, \" was correctly created\")\n        });\n      });\n    },\n    addMission: function addMission() {\n      var _this2 = this;\n\n      this.$prompt('Enter the name of the new mission', 'Create a new Mission üéØ', {\n        confirmButtonText: 'Create',\n        cancelButtonText: 'Cancel'\n      }).then(function (_ref2) {\n        var value = _ref2.value;\n\n        _this2.$message({\n          type: 'success',\n          message: \"The new mission \".concat(value, \" was correctly created\")\n        });\n      });\n    },\n    removeTab: function removeTab(targetName) {\n      var _this3 = this;\n\n      this.$confirm(\"Are you sure you want to delete the badge \".concat(targetName.name, \" and all its related missions ?\"), 'Delete badge', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _this3.$message({\n          type: 'success',\n          message: 'Delete completed'\n        });\n      }); // See https://element.eleme.io/#/en-US/component/tabs\n    }\n  }\n};",{"version":3,"sources":["LearningTrajectory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,QAAA,MAAA,gBAAA;AACA,OAAA,mBAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,OAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,oBAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,mBAAA,CAAA,oBAAA,CAAA,KAAA,oBAAA,CAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA;AANA,GAVA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,oBAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,OAAA,CAAA,iCAAA,EAAA,uBAAA,EAAA;AACA,QAAA,iBAAA,EAAA,QADA;AAEA,QAAA,gBAAA,EAAA;AAFA,OAAA,EAGA,IAHA,CAGA,gBAAA;AAAA,YAAA,KAAA,QAAA,KAAA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,0BAAA,KAAA;AAFA,SAAA;AAIA,OARA;AASA,KAXA;AAYA,IAAA,UAZA,wBAYA;AAAA;;AACA,WAAA,OAAA,CAAA,mCAAA,EAAA,yBAAA,EAAA;AACA,QAAA,iBAAA,EAAA,QADA;AAEA,QAAA,gBAAA,EAAA;AAFA,OAAA,EAGA,IAHA,CAGA,iBAAA;AAAA,YAAA,KAAA,SAAA,KAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,4BAAA,KAAA;AAFA,SAAA;AAIA,OARA;AASA,KAtBA;AAuBA,IAAA,SAvBA,qBAuBA,UAvBA,EAuBA;AAAA;;AACA,WAAA,QAAA,qDAAA,UAAA,CAAA,IAAA,sCAAA,cAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,QAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OATA,EADA,CAWA;AACA;AAnCA;AArBA,CAAA","sourcesContent":["<template lang=\"html\">\n  <el-row>\n    <el-col :span=\"24\">\n      <div class=\"grid-content bg-purple-dark\">\n        <router-link to=\"/\" class=\"left\"><i class=\"el-icon-caret-left\">Learning Trajectories üéì</i></router-link>\n        <br>\n        <div slot=\"header\" class=\"clearfix\" style=\"margin: auto; width: 600px; text-align: center\">\n          <h2> {{ 'üéì' + trajectory.name }}</h2>\n          <p >Description: This learning path will take you into the cellar of digital marketing. You will learn every details related to how we aquire new leads and data on our clients</p>\n          <br>\n          <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"trajectory.progress\" status=\"\"></el-progress>\n        </div>\n        <hr>\n        <br>\n        <el-container>\n          <el-button v-if=\"isAdmin\" size=\"small\" type=\"success\" plain class=\"left\" @click=\"addBadge(trajectory)\">üèÖCreate new Badge <i class=\"el-icon-circle-plus-outline\"></i></el-button>\n        </el-container>\n        <br>\n        <el-tabs type=\"card\" style=\"height: auto;\">\n          <el-tab-pane v-for=\"badge in trajectory.badges\" :label=\"'üèÖ' + badge.name\">\n            <el-container style=\"margin-top: 10px\">\n              <el-button v-if=\"isAdmin\" size=\"mini\" type=\"primary\" plain icon=\"el-icon-edit\" @click=\"editBadge(badge)\">Edit BadgeüèÖ</el-button>\n              <el-button v-if=\"isAdmin\" size=\"mini\" type=\"danger\" plain icon=\"el-icon-delete\" @click=\"deleteBadge(badge)\">Delete BadgeüèÖ</el-button>\n            </el-container>\n            <el-progress type=\"circle\" :percentage=\"50\" status=\"\"></el-progress>\n            <Missions :badge=\"badge\"></Missions>\n          </el-tab-pane>\n          <br>\n          <el-button v-if=\"isAdmin\" size=\"small\" type=\"success\" plain class=\"left\" @click=\"addMission(trajectory)\">üéØCreate new mission <i class=\"el-icon-circle-plus-outline\"></i></el-button>\n        </el-tabs>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport Missions from './Missions.vue'\nimport seraphinAcademyData from '@/seraphinAcademyData.json'\n\nexport default {\n  props: ['badge'],\n  components: {\n    Missions\n  },\n  data() {\n    return {\n      learningTrajectoryId: null\n    }\n  },\n  computed: {\n    trajectory() {\n      return seraphinAcademyData.learningTrajectories[this.learningTrajectoryId]\n    },\n    isAdmin() {\n      return this.$store.state.isAdmin\n    }\n  },\n  created() {\n    this.learningTrajectoryId = this.$route.params.id;\n  },\n  methods: {\n    addBadge() {\n      this.$prompt('Enter the name of the new badge', 'Create a new Badge üèÖ', {\n        confirmButtonText: 'Create',\n        cancelButtonText: 'Cancel'\n      }).then(({ value }) => {\n        this.$message({\n          type: 'success',\n          message: `The new badge ${value} was correctly created`\n        });\n      })\n    },\n    addMission() {\n      this.$prompt('Enter the name of the new mission', 'Create a new Mission üéØ', {\n        confirmButtonText: 'Create',\n        cancelButtonText: 'Cancel'\n      }).then(({ value }) => {\n        this.$message({\n          type: 'success',\n          message: `The new mission ${value} was correctly created`\n        });\n      })\n    },\n    removeTab(targetName) {\n      this.$confirm(`Are you sure you want to delete the badge ${targetName.name} and all its related missions ?`, 'Delete badge', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: 'Delete completed'\n        });\n      })\n      // See https://element.eleme.io/#/en-US/component/tabs\n    }\n  }\n}\n</script>\n\n<style>\n  .text {\n    font-size: 14px;\n  }\n\n  .item {\n    margin-bottom: 10px;\n  }\n\n  .clearfix:before,\n  .clearfix:after {\n    display: table;\n    content: \"\";\n  }\n  .clearfix:after {\n    clear: both\n  }\n\n  .left{\n    float: left;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}