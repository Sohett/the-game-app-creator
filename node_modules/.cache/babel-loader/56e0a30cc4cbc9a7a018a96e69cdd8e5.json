{"remainingRequest":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/babel-loader/lib/index.js!/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/services/api.js","dependencies":[{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/services/api.js","mtime":1568586291252},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport \"core-js/modules/es6.array.map\";\nimport _Array$isArray from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Promise from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport * as camelCaseKeys from 'camelcase-keys';\nimport { getIdToken } from './auth';\nvar SERVER_URL = 'https://api.the-game.website';\naxios.interceptors.request.use(function (config) {\n  console.log(config);\n}, function (error) {\n  return _Promise.reject(error);\n});\naxios.interceptors.response.use( // function (response) { return formatResponse(response).data },\nfunction (response) {\n  response;\n}, function (error) {\n  var message = error.response.data.message;\n  return {\n    success: false,\n    message: message || 'ðŸ¤­ Oops...petit problÃ¨me technique. Contactez les techies.'\n  };\n});\n\nvar formatResponse = function formatResponse(_ref) {\n  var rawData = _ref.data,\n      success = _ref.success,\n      message = _ref.message;\n  var data;\n\n  if (rawData) {\n    if (_Array$isArray(rawData)) {\n      data = rawData.map(function (x) {\n        return camelCaseKeys(x, {\n          deep: true\n        });\n      });\n    } else {\n      data = camelCaseKeys(rawData, {\n        deep: true\n      });\n    }\n  }\n\n  return {\n    data: data,\n    success: success,\n    message: message\n  };\n};\n\nvar API =\n/*#__PURE__*/\nfunction () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"headers\",\n    value: function headers() {\n      return {\n        'Authorization': \"Bearer \".concat(getIdToken()),\n        'Content-type': 'application/json'\n      };\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(endPoint) {\n        var params,\n            options,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                options = {\n                  baseURL: SERVER_URL,\n                  url: endPoint,\n                  method: 'GET',\n                  params: params,\n                  headers: this.headers()\n                };\n                return _context.abrupt(\"return\", axios(options));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }]);\n\n  return API;\n}();\n\nexport default API;",{"version":3,"sources":["/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/services/api.js"],"names":["axios","camelCaseKeys","getIdToken","SERVER_URL","interceptors","request","use","config","console","log","error","reject","response","message","data","success","formatResponse","rawData","map","x","deep","API","endPoint","params","options","baseURL","url","method","headers"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,gBAA/B;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,IAAMC,UAAU,GAAG,8BAAnB;AAEAH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAUC,MAAV,EAAkB;AAACC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAAoB,CADzC,EAEE,UAAUG,KAAV,EAAiB;AACf,SAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACD,CAJH;AAOAV,KAAK,CAACI,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,EACE;AACA,UAAUM,QAAV,EAAoB;AAAEA,EAAAA,QAAQ;AAAE,CAFlC,EAGE,UAAUF,KAAV,EAAiB;AAAA,MACPG,OADO,GACKH,KAAK,CAACE,QAAN,CAAeE,IADpB,CACPD,OADO;AAEf,SAAO;AACLE,IAAAA,OAAO,EAAE,KADJ;AAELF,IAAAA,OAAO,EAAEA,OAAO,IAAI;AAFf,GAAP;AAID,CATH;;AAYA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,OAAyC;AAAA,MAAhCC,OAAgC,QAAtCH,IAAsC;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdF,OAAc,QAAdA,OAAc;AAC9D,MAAIC,IAAJ;;AACA,MAAIG,OAAJ,EAAa;AACX,QAAI,eAAcA,OAAd,CAAJ,EAA4B;AAC1BH,MAAAA,IAAI,GAAGG,OAAO,CAACC,GAAR,CAAY,UAAAC,CAAC;AAAA,eAAIlB,aAAa,CAACkB,CAAD,EAAI;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAJ,CAAjB;AAAA,OAAb,CAAP;AACD,KAFD,MAEO;AACLN,MAAAA,IAAI,GAAGb,aAAa,CAACgB,OAAD,EAAU;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAV,CAApB;AACD;AACF;;AAED,SAAO;AAAEN,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,OAAO,EAAPA,OAAR;AAAiBF,IAAAA,OAAO,EAAPA;AAAjB,GAAP;AACD,CAXD;;IAaMQ,G;;;;;;;;;8BACc;AAChB,aAAO;AACL,0CAA2BnB,UAAU,EAArC,CADK;AAEL,wBAAgB;AAFX,OAAP;AAID;;;;;;+CAEiBoB,Q;;;;;;;;AAAUC,gBAAAA,M,2DAAS,E;AAC7BC,gBAAAA,O,GAAU;AACdC,kBAAAA,OAAO,EAAEtB,UADK;AAEduB,kBAAAA,GAAG,EAAEJ,QAFS;AAGdK,kBAAAA,MAAM,EAAE,KAHM;AAIdJ,kBAAAA,MAAM,EAANA,MAJc;AAKdK,kBAAAA,OAAO,EAAE,KAAKA,OAAL;AALK,iB;iDAOT5B,KAAK,CAACwB,OAAD,C;;;;;;;;;;;;;;;;;;;;;AAIhB,eAAeH,GAAf","sourcesContent":["import axios from 'axios'\nimport * as camelCaseKeys from 'camelcase-keys'\nimport { getIdToken } from './auth'\n\nconst SERVER_URL = 'https://api.the-game.website'\n\naxios.interceptors.request.use(\n  function (config) {console.log(config)},\n  function (error) {\n    return Promise.reject(error)\n  }\n)\n\naxios.interceptors.response.use(\n  // function (response) { return formatResponse(response).data },\n  function (response) { response },\n  function (error) {\n    const { message } = error.response.data\n    return {\n      success: false,\n      message: message || 'ðŸ¤­ Oops...petit problÃ¨me technique. Contactez les techies.'\n    }\n  }\n)\n\nconst formatResponse = ({ data: rawData, success, message }) => {\n  let data\n  if (rawData) {\n    if (Array.isArray(rawData)) {\n      data = rawData.map(x => camelCaseKeys(x, { deep: true }))\n    } else {\n      data = camelCaseKeys(rawData, { deep: true })\n    }\n  }\n\n  return { data, success, message }\n}\n\nclass API {\n  static headers () {\n    return {\n      'Authorization': `Bearer ${getIdToken()}`,\n      'Content-type': 'application/json'\n    }\n  }\n\n  static async get (endPoint, params = {}) {\n    const options = {\n      baseURL: SERVER_URL,\n      url: endPoint,\n      method: 'GET',\n      params,\n      headers: this.headers()\n    }\n    return axios(options)\n  }\n}\n\nexport default API\n"]}]}