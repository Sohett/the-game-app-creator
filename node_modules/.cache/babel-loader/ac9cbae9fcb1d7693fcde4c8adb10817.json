{"remainingRequest":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/babel-loader/lib/index.js!/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/src/components/Missions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/src/components/Missions.vue","mtime":1549298821220},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['badge'],\n  methods: {\n    setMissionDone: function setMissionDone(missionId) {}\n  },\n  computed: {\n    isAdmin: function isAdmin() {\n      return this.$store.state.isAdmin;\n    }\n  }\n};",{"version":3,"sources":["Missions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,OAAA,CADA;AAEA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,SADA,EACA,CACA;AAFA,GAFA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA;AAHA;AANA,CAAA","sourcesContent":["<template lang=\"html\">\n  <el-table\n      ref=\"filterTable\"\n      :data=\"badge.missions\"\n      style=\"width: 100%\">\n      <el-table-column type=\"expand\">\n       <template slot-scope=\"props\">\n         <p>Mission: {{ props.row.mission }}</p>\n         <p>Details: {{ props.row.missionDetails }}</p>\n         <p>Level of difficulty: {{ props.row.level }}</p>\n       </template>\n     </el-table-column>\n      <el-table-column\n        sortable\n        label=\"Done\"\n        prop=\"done\"\n        width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.done ? 'success' : 'danger'\"\n            disable-transitions>{{scope.row.done ? 'YES' : 'NO'}}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"Level\"\n        prop=\"level\"\n        width=\"100\">\n      </el-table-column>\n      <el-table-column\n        label=\"Mission\"\n        prop=\"mission\"\n        width=\"auto\">\n      </el-table-column>\n      <el-table-column\n        label=\"Mark as done\"\n        width=\"120\">\n      <template slot-scope=\"scope\">\n        <el-button plain size=\"mini\" @click=\"setMissionDone(scope.row.missionId)\">Done</el-button>\n      </template>\n    </el-table-column>\n    <el-table-column v-if=\"isAdmin\" label=\"Admin Operations\" width=\"200\">\n      <template slot-scope=\"scope\">\n        <el-popover placement=\"left\" width=\"400\" trigger=\"click\">\n          <el-container>\n            <el-input size=\"mini\" placeholder=\"Edit the stuff here\"></el-input>\n            <el-button size=\"mini\" style=\"margin-left: 10px\" type=\"primary\" plain icon=\"el-icon-edit\" @click=\"handleEdit(scope.$index, scope.row.missionId)\">Submit</el-button>\n          </el-container>\n          <el-button slot=\"reference\" size=\"mini\" type=\"primary\" plain icon=\"el-icon-edit\"></el-button>\n        </el-popover>\n        <el-button style=\"margin-left: 10px\" size=\"mini\" type=\"danger\" plain icon=\"el-icon-delete\" @click=\"handleDelete(scope.$index, scope.row.missionId)\"></el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    props: ['badge'],\n    methods: {\n      setMissionDone(missionId) {\n      }\n    },\n    computed: {\n      isAdmin () {\n        return this.$store.state.isAdmin\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}