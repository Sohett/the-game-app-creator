{"remainingRequest":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/thread-loader/dist/cjs.js!/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/babel-loader/lib/index.js!/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/services/api.js","dependencies":[{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/services/api.js","mtime":1568671879447},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport \"core-js/modules/es6.array.map\";\nimport _Array$isArray from \"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nimport axios from 'axios';\nimport snakeCaseKeys from 'snakecase-keys';\nimport * as camelCaseKeys from 'camelcase-keys';\nimport { getIdToken } from './auth';\nvar SERVER_URL = 'https://api.the-game.website';\n\nvar formatData = function formatData(data) {\n  return snakeCaseKeys(data);\n};\n\nvar formatResponse = function formatResponse(response) {\n  var data = response.data.data;\n\n  if (data) {\n    if (_Array$isArray(data)) {\n      return data.map(function (x) {\n        return camelCaseKeys(x, {\n          deep: true\n        });\n      });\n    } else {\n      return camelCaseKeys(data, {\n        deep: true\n      });\n    }\n  }\n};\n\nvar API =\n/*#__PURE__*/\nfunction () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"headers\",\n    value: function headers() {\n      return {\n        'Authorization': \"Bearer \".concat(getIdToken()),\n        'Content-type': 'application/json'\n      };\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(endPoint) {\n        var params,\n            options,\n            response,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                options = {\n                  url: SERVER_URL + endPoint,\n                  method: 'GET',\n                  params: params,\n                  headers: this.headers()\n                };\n                _context.next = 4;\n                return axios(options);\n\n              case 4:\n                response = _context.sent;\n                return _context.abrupt(\"return\", formatResponse(response));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"post\",\n    value: function () {\n      var _post = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(endPoint) {\n        var data,\n            options,\n            response,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                options = {\n                  url: SERVER_URL + endPoint,\n                  method: 'POST',\n                  data: formatData(data),\n                  headers: this.headers()\n                };\n                _context2.next = 4;\n                return axios(options);\n\n              case 4:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", formatResponse(response));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function post(_x2) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(endPoint) {\n        var data,\n            options,\n            response,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                options = {\n                  url: SERVER_URL + endPoint,\n                  method: 'PUT',\n                  data: formatData(data),\n                  headers: this.headers()\n                };\n                _context3.next = 4;\n                return axios(options);\n\n              case 4:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", formatResponse(response));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function put(_x3) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }]);\n\n  return API;\n}();\n\nexport default API;",{"version":3,"sources":["/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/services/api.js"],"names":["axios","snakeCaseKeys","camelCaseKeys","getIdToken","SERVER_URL","formatData","data","formatResponse","response","map","x","deep","API","endPoint","params","options","url","method","headers"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,KAAKC,aAAZ,MAA+B,gBAA/B;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,IAAMC,UAAU,GAAG,8BAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,SAAOL,aAAa,CAACK,IAAD,CAApB;AACD,CAFD;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAc;AACnC,MAAMF,IAAI,GAAGE,QAAQ,CAACF,IAAT,CAAcA,IAA3B;;AACA,MAAIA,IAAJ,EAAU;AACR,QAAI,eAAcA,IAAd,CAAJ,EAAyB;AACvB,aAAOA,IAAI,CAACG,GAAL,CAAS,UAAAC,CAAC;AAAA,eAAIR,aAAa,CAACQ,CAAD,EAAI;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAJ,CAAjB;AAAA,OAAV,CAAP;AACD,KAFD,MAEO;AACL,aAAOT,aAAa,CAACI,IAAD,EAAO;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAP,CAApB;AACD;AACF;AACF,CATD;;IAWMC,G;;;;;;;;;8BACc;AAChB,aAAO;AACL,0CAA2BT,UAAU,EAArC,CADK;AAEL,wBAAgB;AAFX,OAAP;AAID;;;;;;+CAEiBU,Q;;;;;;;;;AAAUC,gBAAAA,M,2DAAS,E;AAC7BC,gBAAAA,O,GAAU;AACdC,kBAAAA,GAAG,EAAEZ,UAAU,GAAGS,QADJ;AAEdI,kBAAAA,MAAM,EAAE,KAFM;AAGdH,kBAAAA,MAAM,EAANA,MAHc;AAIdI,kBAAAA,OAAO,EAAE,KAAKA,OAAL;AAJK,iB;;uBAMOlB,KAAK,CAACe,OAAD,C;;;AAAtBP,gBAAAA,Q;iDACCD,cAAc,CAACC,QAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGJK,Q;;;;;;;;;AAAUP,gBAAAA,I,8DAAO,E;AAC5BS,gBAAAA,O,GAAU;AACdC,kBAAAA,GAAG,EAAEZ,UAAU,GAAGS,QADJ;AAEdI,kBAAAA,MAAM,EAAE,MAFM;AAGdX,kBAAAA,IAAI,EAAED,UAAU,CAACC,IAAD,CAHF;AAIdY,kBAAAA,OAAO,EAAE,KAAKA,OAAL;AAJK,iB;;uBAMOlB,KAAK,CAACe,OAAD,C;;;AAAtBP,gBAAAA,Q;kDACCD,cAAc,CAACC,QAAD,C;;;;;;;;;;;;;;;;;;;;;gDAGLK,Q;;;;;;;;;AAAUP,gBAAAA,I,8DAAO,E;AAC3BS,gBAAAA,O,GAAU;AACdC,kBAAAA,GAAG,EAAEZ,UAAU,GAAGS,QADJ;AAEdI,kBAAAA,MAAM,EAAE,KAFM;AAGdX,kBAAAA,IAAI,EAAED,UAAU,CAACC,IAAD,CAHF;AAIdY,kBAAAA,OAAO,EAAE,KAAKA,OAAL;AAJK,iB;;uBAMOlB,KAAK,CAACe,OAAD,C;;;AAAtBP,gBAAAA,Q;kDACCD,cAAc,CAACC,QAAD,C;;;;;;;;;;;;;;;;;;;;;AAIzB,eAAeI,GAAf","sourcesContent":["import axios from 'axios'\nimport snakeCaseKeys from 'snakecase-keys'\nimport * as camelCaseKeys from 'camelcase-keys'\nimport { getIdToken } from './auth'\n\nconst SERVER_URL = 'https://api.the-game.website'\n\nconst formatData = (data) => {\n  return snakeCaseKeys(data)\n}\n\nconst formatResponse = (response) => {\n  const data = response.data.data\n  if (data) {\n    if (Array.isArray(data)) {\n      return data.map(x => camelCaseKeys(x, { deep: true }))\n    } else {\n      return camelCaseKeys(data, { deep: true })\n    }\n  }\n}\n\nclass API {\n  static headers () {\n    return {\n      'Authorization': `Bearer ${getIdToken()}`,\n      'Content-type': 'application/json'\n    }\n  }\n\n  static async get (endPoint, params = {}) {\n    const options = {\n      url: SERVER_URL + endPoint,\n      method: 'GET',\n      params,\n      headers: this.headers()\n    }\n    const response = await axios(options)\n    return formatResponse(response)\n  }\n\n  static async post (endPoint, data = {}) {\n    const options = {\n      url: SERVER_URL + endPoint,\n      method: 'POST',\n      data: formatData(data),\n      headers: this.headers()\n    }\n    const response = await axios(options)\n    return formatResponse(response)\n  }\n\n  static async put (endPoint, data = {}) {\n    const options = {\n      url: SERVER_URL + endPoint,\n      method: 'PUT',\n      data: formatData(data),\n      headers: this.headers()\n    }\n    const response = await axios(options)\n    return formatResponse(response)\n  }\n}\n\nexport default API\n"]}]}