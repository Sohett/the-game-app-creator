{"remainingRequest":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/views/Home.vue","mtime":1568562981919},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex'\nimport School from '@/components/School.vue'\nimport NewSchool from '@/components/NewSchool.vue'\nimport Company from '@/components/Company.vue'\nimport Preferences from '@/components/Preferences.vue'\nimport dataSchool1 from '@/seraphinAcademyData.json'\nimport dataSchool2 from '@/seraphinAcademyData2.json'\n\nexport default {\n  mounted () {\n    this.setCurrentUserData();\n  },\n  components: {\n    School,\n    NewSchool,\n    Company,\n    Preferences\n  },\n  props: ['school'],\n  computed: {\n    ...mapGetters(['getSchools', 'getAdmin']),\n    isAdmin() {\n      return this.getAdmin;\n    },\n    schools () {\n      return this.getSchools;\n    }\n  },\n  data() {\n    return {\n      newLearningTrajectoryTitle: null,\n      newLearningTrajectory: null,\n      newBadgeTitle: '',\n      newBadges: [],\n    }\n  },\n  methods: {\n    ...mapActions(['setBecomeAdmin', 'setCurrentUserData']),\n    becomeAdmin() {\n      this.setBecomeAdmin(!this.isAdmin)\n    },\n    createNewLearningTrajectory() {\n      this.newLearningTrajectory = this.newLearningTrajectoryTitle;\n      this.newLearningTrajectoryTitle = '';\n    },\n    createNewBadge() {\n      this.newBadges.push({ name: this.newBadgeTitle });\n      this.newBadgeTitle = '';\n    }\n  }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <el-row class=\"row-bg center\" justify=\"center\">\n    <el-tabs type=\"border-card\">\n      <el-tab-pane label=\"📓 Schools\">\n        <br>\n        <el-tabs>\n          <el-tab-pane :label=\"school.name\" v-for=\"school in schools\">\n            <School :school=\"school\"></School>\n          </el-tab-pane>\n          <el-tab-pane label=\"📓 New School\" v-if=\"isAdmin\">\n            <NewSchool></NewSchool>\n          </el-tab-pane>\n        </el-tabs>\n      </el-tab-pane>\n      <el-tab-pane label=\"🏛️ The company\">\n        <Company></Company>\n      </el-tab-pane>\n      <el-tab-pane label=\"⚙️ Preferences\">\n        <Preferences></Preferences>\n      </el-tab-pane>\n    </el-tabs>\n  </el-row>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport School from '@/components/School.vue'\nimport NewSchool from '@/components/NewSchool.vue'\nimport Company from '@/components/Company.vue'\nimport Preferences from '@/components/Preferences.vue'\nimport dataSchool1 from '@/seraphinAcademyData.json'\nimport dataSchool2 from '@/seraphinAcademyData2.json'\n\nexport default {\n  mounted () {\n    this.setCurrentUserData();\n  },\n  components: {\n    School,\n    NewSchool,\n    Company,\n    Preferences\n  },\n  props: ['school'],\n  computed: {\n    ...mapGetters(['getSchools', 'getAdmin']),\n    isAdmin() {\n      return this.getAdmin;\n    },\n    schools () {\n      return this.getSchools;\n    }\n  },\n  data() {\n    return {\n      newLearningTrajectoryTitle: null,\n      newLearningTrajectory: null,\n      newBadgeTitle: '',\n      newBadges: [],\n    }\n  },\n  methods: {\n    ...mapActions(['setBecomeAdmin', 'setCurrentUserData']),\n    becomeAdmin() {\n      this.setBecomeAdmin(!this.isAdmin)\n    },\n    createNewLearningTrajectory() {\n      this.newLearningTrajectory = this.newLearningTrajectoryTitle;\n      this.newLearningTrajectoryTitle = '';\n    },\n    createNewBadge() {\n      this.newBadges.push({ name: this.newBadgeTitle });\n      this.newBadgeTitle = '';\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .center{\n    float: center;\n  }\n</style>\n"]}]}