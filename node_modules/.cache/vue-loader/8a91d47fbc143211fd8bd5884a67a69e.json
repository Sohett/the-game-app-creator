{"remainingRequest":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/src/views/Home.vue","mtime":1549299744509},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/seraphincademy/seraphinacademy-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\nimport SummaryLearningTrajectory from '@/components/SummaryLearningTrajectory.vue'\nimport dataSchool1 from '@/seraphinAcademyData.json'\nimport dataSchool2 from '@/seraphinAcademyData2.json'\n\nexport default {\n  components: {\n    SummaryLearningTrajectory\n  },\n  props: ['trajectory'],\n  computed: {\n    isAdmin() {\n      return this.$store.state.isAdmin\n    }\n  },\n  data() {\n    return {\n      data: dataSchool1,\n      newLearningTrajectoryTitle: null,\n      newLearningTrajectory: null,\n      newBadgeTitle: '',\n      newBadges: [],\n      schoolLabel: 'it',\n      schoolName: 'üìì IT School',\n      schools: [\n        {\n          label: 'it',\n          name: 'üìì IT School',\n          data: dataSchool1\n        },\n        {\n          label: 'business',\n          name: 'üìì Business School',\n          data: dataSchool2\n        }\n      ]\n    }\n  },\n  methods: {\n    ...mapActions(['setBecomeAdmin']),\n    becomeAdmin() {\n      this.setBecomeAdmin(!this.isAdmin)\n    },\n    createNewLearningTrajectory() {\n      this.newLearningTrajectory = this.newLearningTrajectoryTitle;\n      this.newLearningTrajectoryTitle = ''\n    },\n    createNewBadge() {\n      this.newBadges.push({ name: this.newBadgeTitle });\n      this.newBadgeTitle = ''\n    },\n    changeData(school) {\n      this.data = school.data\n      this.schoolLabel = school.label\n      this.schoolName = school.name\n    },\n    deleteSchool() {\n      this.$confirm(`Are you sure you want to delete the \\\"${this.schoolName}\\\" and all its related \\\"Learning Trajectories\\\" ?`, 'Delete School', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: 'Delete completed'\n        });\n      })\n    },\n    promptNewSchool() {\n      this.$prompt('Enter the name of your new School', 'Create a new School üìì', {\n        confirmButtonText: 'Create',\n        cancelButtonText: 'Cancel'\n      }).then(({ value }) => {\n        this.$message({\n          type: 'success',\n          message: `The new school ${value} was correctly created`\n        });\n      })\n    }\n  }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <el-row class=\"row-bg center\" justify=\"center\">\n    <el-button style=\"margin-bottom: 20px\" type=\"info\" plain @click=\"becomeAdmin\">{{ this.$store.state.isAdmin ? 'See the user view' : 'See the admin view' }}</el-button>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane label=\"üìì Schools\">\n        <el-radio-group v-model=\"schoolLabel\" style=\"margin-bottom: 20px;\">\n          <el-radio-button v-for=\"school in schools\" :label=\"school.label\">\n            <span @click=\"changeData(school)\">{{ school.name }}</span>\n          </el-radio-button>\n          <el-radio-button v-if=\"isAdmin\">\n            <span @click=\"promptNewSchool\" style=\"color: #51bd91\"><i class=\"el-icon-circle-plus-outline\"></i> Create New School</span>\n          </el-radio-button>\n        </el-radio-group>\n        <el-container>\n          <el-button v-if=\"isAdmin\" size=\"small\" style=\"margin-left: 10px; margin-bottom: 20px\" @click=\"deleteSchool\" type=\"danger\" plain>Delete School <i class=\"el-icon-delete el-icon-right\"></i></el-button>\n        </el-container>\n        <el-col :span=\"6\" v-for=\"trajectory in data.learningTrajectories\">\n          <div class=\"grid-content bg-purple\">\n            <SummaryLearningTrajectory :trajectory=\"trajectory\">\n            </SummaryLearningTrajectory>\n          </div>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"newLearningTrajectory\">\n          <div class=\"grid-content bg-purple\">\n            <el-card class=\"box-card\" shadow=\"hover\">\n              <div slot=\"header\" class=\"clearfix\">\n                <h2>{{ 'üéì' + newLearningTrajectory }}</h2>\n              </div>\n              <div v-for=\"badge in newBadges\" class=\"text item\">\n                {{ 'üèÖ' + badge.name}}\n              </div>\n              <div class=\"text item\">\n                <el-input prefix-icon=\"el-icon-circle-plus-outline\" placeholder=\"üèÖ Add a new Badge + ENTER\" v-model=\"newBadgeTitle\" @keyup.enter.native=\"createNewBadge\"></el-input>\n              </div>\n            </el-card>\n          </div>\n        </el-col>\n        <el-col :span=\"6\" v-if=\"isAdmin\">\n          <div class=\"grid-content bg-purple\">\n            <el-card class=\"box-card\" shadow=\"never\">\n              <div >\n                <h2>üéì</h2>\n                <el-input prefix-icon=\"el-icon-circle-plus-outline\" placeholder=\"Add a new Learning Path + ENTER\" v-model=\"newLearningTrajectoryTitle\" @keyup.enter.native=\"createNewLearningTrajectory\"></el-input>\n              </div>\n            </el-card>\n          </div>\n        </el-col>\n      </el-tab-pane>\n      <el-tab-pane label=\"üèõÔ∏è The company\">\n        <p>Name: Seraphin SA</p>\n        <p>Employees: 20-25</p>\n        <p>Address: Rue des gens bien, 22. Bruxelles 1000, BELGIQUE</p>\n        <p>Business: Insurance</p>\n      </el-tab-pane>\n      <el-tab-pane label=\"‚öôÔ∏è Preferences\">\n        <p>Plan: Free plan up to 50 users</p>\n        <p>Users: 18</p>\n        <p>Admin: Thomas Sohet</p>\n        <p>Contact us: jean-claude.dus@gmail.test</p>\n      </el-tab-pane>\n    </el-tabs>\n  </el-row>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport SummaryLearningTrajectory from '@/components/SummaryLearningTrajectory.vue'\nimport dataSchool1 from '@/seraphinAcademyData.json'\nimport dataSchool2 from '@/seraphinAcademyData2.json'\n\nexport default {\n  components: {\n    SummaryLearningTrajectory\n  },\n  props: ['trajectory'],\n  computed: {\n    isAdmin() {\n      return this.$store.state.isAdmin\n    }\n  },\n  data() {\n    return {\n      data: dataSchool1,\n      newLearningTrajectoryTitle: null,\n      newLearningTrajectory: null,\n      newBadgeTitle: '',\n      newBadges: [],\n      schoolLabel: 'it',\n      schoolName: 'üìì IT School',\n      schools: [\n        {\n          label: 'it',\n          name: 'üìì IT School',\n          data: dataSchool1\n        },\n        {\n          label: 'business',\n          name: 'üìì Business School',\n          data: dataSchool2\n        }\n      ]\n    }\n  },\n  methods: {\n    ...mapActions(['setBecomeAdmin']),\n    becomeAdmin() {\n      this.setBecomeAdmin(!this.isAdmin)\n    },\n    createNewLearningTrajectory() {\n      this.newLearningTrajectory = this.newLearningTrajectoryTitle;\n      this.newLearningTrajectoryTitle = ''\n    },\n    createNewBadge() {\n      this.newBadges.push({ name: this.newBadgeTitle });\n      this.newBadgeTitle = ''\n    },\n    changeData(school) {\n      this.data = school.data\n      this.schoolLabel = school.label\n      this.schoolName = school.name\n    },\n    deleteSchool() {\n      this.$confirm(`Are you sure you want to delete the \\\"${this.schoolName}\\\" and all its related \\\"Learning Trajectories\\\" ?`, 'Delete School', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: 'Delete completed'\n        });\n      })\n    },\n    promptNewSchool() {\n      this.$prompt('Enter the name of your new School', 'Create a new School üìì', {\n        confirmButtonText: 'Create',\n        cancelButtonText: 'Cancel'\n      }).then(({ value }) => {\n        this.$message({\n          type: 'success',\n          message: `The new school ${value} was correctly created`\n        });\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .center{\n    float: center;\n  }\n</style>\n"]}]}