{"remainingRequest":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/components/Forms/General.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/src/components/Forms/General.vue","mtime":1568809935679},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomassohet/code/Sohett/perso/The Game/the-game-creator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { operatorEmail } from '@/services/auth'\nimport { mapState } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      maxTime: 5,\n      maxStep: 10,\n      appForm: {},\n      rules: {\n        name: [\n          { required: true, message: 'Please input App name', trigger: 'change' }\n        ],\n        url: [\n          { required: true, message: 'Please input an URL', trigger: 'change'  }\n        ],\n        steps: [\n          { required: true, message: 'Please choose a number of steps', trigger: 'change'  }\n        ],\n        time: [\n          { required: true, message: 'Please choose a countdown', trigger: 'change'  }\n        ],\n        introduction: [\n          { required: true, message: 'Please write an introduction', trigger: 'change'  }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapState(['app', 'steps']),\n    countdowmInHours() {\n      return (this.app.countdown / 3600 )\n    }\n  },\n  methods: {\n    formatTooltip(val) {\n      return `${val} hour(s)`;\n    },\n    submitForm(appForm) {\n      this.$refs[appForm].validate((valid) => {\n        if (valid) {\n          this.$message({\n            message: `Congrats, the app ${this.app.name} was successfuly created.`,\n            type: 'success'\n          });\n        } else {\n          this.$message({\n            message: `Failed to create the app ${this.app.name}.`,\n            type: 'error'\n          });\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n  }\n}\n",{"version":3,"sources":["General.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"General.vue","sourceRoot":"src/components/Forms","sourcesContent":["<template>\n  <el-row>\n    <el-col :span=\"12\">\n      <el-form :model=\"appForm\" :rules=\"rules\" ref=\"appForm\" class=\"form\">\n        <el-form-item label=\"Email\">\n          <el-input v-model=\"app.email\" :disabled=\"true\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Name\" prop=\"name\" >\n          <el-input v-model=\"app.name\" placeholder=\"Name of the app\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"URL\" prop=\"url\">\n          <el-input v-model=\"app.origin\" :placeholder=\"app.name.toLowerCase()\">\n            <template slot=\"prepend\">https://</template>\n            <template slot=\"append\">.the-game.website.com</template>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"How long should the game last\" prop=\"time\">\n          <span>‚è±Ô∏è</span>\n          <el-slider v-model=\"countdowmInHours\" :step=\"1\" :format-tooltip=\"formatTooltip\" :max=\"maxTime\"></el-slider>\n        </el-form-item>\n        <el-form-item label=\"Number of steps (usually number of rooms)\" prop=\"steps\">\n          <span>üë£</span>\n          <el-slider v-model=\"app.steps\" :step=\"1\" :max=\"maxStep\"></el-slider>\n        </el-form-item>\n        <el-form-item label=\"Introduction\" prop=\"introduction\">\n          <el-input type=\"textarea\" autosize :rows=\"4\" placeholder=\"Write the introduction text\" v-model=\"steps.homepage.content\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('appForm')\">Go create the first step</el-button>\n        </el-form-item>\n      </el-form>\n    </el-col>\n    <el-col :span=\"12\">\n      <div class=\"container\">\n        <img src=\"../../assets/iphone-frame.png\" class=\"frame\">\n        <div class=\"game-preview\">\n          <div class=\"navbar-preview\">\n            <p v-if=\"app.countdown\">Il te reste {{ countdowmInHours }} heure(s), 0 min, 0 sec</p>\n            <el-steps v-if=\"app.steps\" class=\"steps\" align-center size=\"mini\">\n              <el-step size=\"small\" v-for='i in app.steps' v-bind:key=\"i\"></el-step>\n            </el-steps>\n          </div>\n          <div class=\"instruction-preview\">\n            <br>\n            <p v-if=\"app.name\"><b>Bienvenue au \"{{ app.name }}\" digital Escape Game</b></p>\n            <span v-html=\"steps.homepage.content\"></span>\n            <br>\n            <el-button class=\"button-preview\" type=\"primary\" size=\"mini\" disabled>Aller aux instructions</el-button>\n          </div>\n        </div>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n  import { operatorEmail } from '@/services/auth'\n  import { mapState } from 'vuex'\n\n  export default {\n    data() {\n      return {\n        maxTime: 5,\n        maxStep: 10,\n        appForm: {},\n        rules: {\n          name: [\n            { required: true, message: 'Please input App name', trigger: 'change' }\n          ],\n          url: [\n            { required: true, message: 'Please input an URL', trigger: 'change'  }\n          ],\n          steps: [\n            { required: true, message: 'Please choose a number of steps', trigger: 'change'  }\n          ],\n          time: [\n            { required: true, message: 'Please choose a countdown', trigger: 'change'  }\n          ],\n          introduction: [\n            { required: true, message: 'Please write an introduction', trigger: 'change'  }\n          ]\n        }\n      }\n    },\n    computed: {\n      ...mapState(['app', 'steps']),\n      countdowmInHours() {\n        return (this.app.countdown / 3600 )\n      }\n    },\n    methods: {\n      formatTooltip(val) {\n        return `${val} hour(s)`;\n      },\n      submitForm(appForm) {\n        this.$refs[appForm].validate((valid) => {\n          if (valid) {\n            this.$message({\n              message: `Congrats, the app ${this.app.name} was successfuly created.`,\n              type: 'success'\n            });\n          } else {\n            this.$message({\n              message: `Failed to create the app ${this.app.name}.`,\n              type: 'error'\n            });\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      }\n    }\n  }\n</script>\n\n<style scoped=\"true\">\n  .form {\n    text-align: center;\n    width: 70vh;\n  }\n  .el-input-group__prepend .el-input-group__append {\n    color: #67696d\n  }\n\n  .container {\n    position: relative;\n    text-align: center;\n  }\n\n  .frame {\n    width: 400px;\n  }\n\n  .game-preview {\n    position: absolute;\n    left: 50%;\n    top: 12%;\n    transform: translate(-48.75%, -10%);\n    max-width: 300px;\n  }\n\n  .navbar-preview {\n    width: 294px;\n    font-size: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    background-color: #fafafa;\n    border-bottom: 1px solid #f3f3f3;\n  }\n\n  .instruction-preview {\n    background-color: #ffffff;\n    font-size: 10px;\n    max-width: 280px;\n  }\n\n  .button-preview {\n    cursor: default;\n  }\n</style>\n"]}]}